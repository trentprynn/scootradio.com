services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - NEXT_PUBLIC_ZOD_LOUD_FAIL_ENABLED=true
      - INTERNAL_API_BASE_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PORT=8000
      - API_BASE_URL=http://localhost:8000
      - DATABASE_URL=postgresql://scoot-radio-user:scoot-radio-pass@db:5432/scoot-radio
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=scoot-radio-user
      - POSTGRES_PASSWORD=scoot-radio-pass
      - POSTGRES_DB=scoot-radio
    ports:
      - "5432:5432"
    volumes:
      - scoot-radio-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - scoot-radio-redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  scoot-radio-db:
    name: scoot-radio-db
  scoot-radio-redis:
    name: scoot-radio-redis
